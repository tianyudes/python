
a = [1, 2, 3]
print(id(a))
a[0] = 1
print(id(a))
# 修改list里面的值，id不会变化

a = (1, 2, 3)
# a[0] = 1这句话直接报错


b = [1, 2, 3, 4]
b.append(7)
print(b)

# 从上面的例子可以看出明显list列表的作用要比tuple作用大很多但是为什么还是会有元组类型呢
# 原因在于在大型的系统中不是所有的程序都有一个人完成，所以就需要有元组这样不可改变的数据类型进行保障，避免了隐藏的错误
# 所以在实际的编程过程中尽量能用元组优先使用元组

c = (1, 2, 3, [1, 23, 4])
# 如何访问元组中的列表要打印这个4

c[3][2] = 5
print(c[3][2])

# 对元组内部的列表是可以修改的

