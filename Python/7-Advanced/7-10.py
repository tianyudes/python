# 正式开始闭包
a = 10


def curve_pre():
    a = 25  # 函数定义时的外部的变量但是不能时全局的变量。

    def curve(x):  # 作用域仅在这个函数的内部
        return a * x * x
    return curve


# 在整个外部的调用中只有上面的一个 a = 10 那么按理来说这个地方输出的也应该是90，不应该是225
f = curve_pre()
print(f.__closure__)
print(f.__closure__[0].cell_contents)  # 输出环境变量 25
a = f(3)
print(f(3))  # 输出的还是之前的225 不是90 这就是闭包的现象。 这里a的取值还是原来的环境变量 a = 25
# 用语言定义一下闭包
# 由内部的函数以及它在定义时候的外部的环境变量所构成的一个整体叫做闭包。
# 一旦这样的函数curve和环境变量形成了一个闭包之后，这个函数在任何地方上调用的时候都不会受其他的变量的影响

